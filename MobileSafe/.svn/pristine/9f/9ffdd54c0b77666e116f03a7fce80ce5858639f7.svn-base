package com.itheima.mobilesafe.activitys;

import java.util.List;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.itheima.mobilesafe.R;
import com.itheima.mobilesafe.db.dao.BlackNumberDao;
import com.itheima.mobilesafe.domain.BlackNumberInfo;

public class CallSmsSafeActivity extends Activity {
	
	public static final String TAG = "CallSmsSafeActivity";
	private BlackNumberDao dao;
	private ListView list_callsms_safe;
	private List<BlackNumberInfo> infos;
	private LinearLayout ll_loading;
	
	private Handler hanlder = new Handler(){
		public void handleMessage(android.os.Message msg) {
			list_callsms_safe.setAdapter(new CallSmsAdapter());
			ll_loading.setVisibility(View.INVISIBLE);
		};
	};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_callsms_safe);
		list_callsms_safe = (ListView) findViewById(R.id.list_callsms_safe);
		ll_loading = (LinearLayout) findViewById(R.id.ll_loading);
		dao = new BlackNumberDao(this);
		//该为在子线程加载数据
		ll_loading.setVisibility(View.VISIBLE);
		new Thread(){
			public void run() {
				infos = dao.findAll();
				hanlder.sendEmptyMessage(0);
			};
		}.start();
		
		
	}
	
	class CallSmsAdapter extends BaseAdapter{

		@Override
		public int getCount() {
			return infos.size();
		}
		//每一天View
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View view ;
			ViewHolder holder;
			if(convertView != null){
				Log.i(TAG, "使用历史缓存的View对象=="+position);
				view = convertView ;
				holder = (ViewHolder) view.getTag();
			}else{
				Log.i(TAG, "创建新的View对象=="+position);
				view = View.inflate(CallSmsSafeActivity.this, R.layout.list_callsms_item, null);
				//当View对象一创建的时候，就把它里面的ID查找出来并且放入容器中（类）
				holder = new ViewHolder();
				holder.tv_number =  (TextView) view.findViewById(R.id.tv_name);
				holder.tv_mode = (TextView) view.findViewById(R.id.tv_mode);
				
				//要把容器和对应的View关联起来，现在容器已经保存了View的层次结构
				view.setTag(holder);
			}
			//进一步优化
			
			//得到黑名单信息
			BlackNumberInfo info = infos.get(position);
			holder.tv_number.setText(info.getNumber());
			String mode = info.getMode();
			if("2".equals(mode)){
				//全部拦截
				holder.tv_mode.setText("短信+电话拦截");
			}else if("0".equals(mode)){
				//电话拦截
				holder.tv_mode.setText("电话拦截");
			}else if("1".equals(mode)){
				//短信拦截
				holder.tv_mode.setText("短信拦截");
			}
			return view;
		}

		@Override
		public Object getItem(int position) {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return 0;
		}
		
	}
	
	static class ViewHolder{
		TextView tv_number;
		TextView tv_mode;
		ImageView iv_delete;
	}
	

}
